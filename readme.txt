Для запуска всей подсистемы после сборки в docker-compose необходимо сделать следующие действия:
1) Проверить статус всех контейнеров, проверить логи двух брокеров.
2) Если все успешно, добавить коннектор вне контейнера так:
   a)Перейти в папку KafkaDockerSettings
   b)Выполнить
   curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" http://localhost:8083/connectors/ -d @connector_master.json

   ps. Для удаления коннектора выполнить:
   curl -i -X DELETE localhost:8083/connectors/db_master/


ps. Во всей системе есть один неприятный ньюанс. Приведу цитату с хабра:
  В настройке коннектора, которую я приведу ниже указано, что топик создается с несколькими партициями,
   однако если изначально база пуста, то по какой-то причине создание топика откладывается до появления в
   таблице данных, при этом топик создается с 1 партицией.
 Это означает, что при ручном удалении топика записей таблицы повторное создание топика будет после добавления новой
 записи в таблицу, однако кол-во партиций по умолчанию не будет установлено и всегда будет 1.
 Решением проблемы является удаление топика, удаление коннектора и повторное его добавление, тогда
 кол-во партиций будет соответствовать topic.creation.default.replication.factor


 ____________________________________________________________________________________________________________________

 Для сборки проекта необходимо в src/main/resources добавить 2 файла:
   1) firebase-account.json - выкачивается с аккаунта Firebase Cloud Messaging
   2) application.properties - файл с настройками конфигурации проекта. Должны присутствовать поля:

   mail.smtp_host = хост SMTP сервера для отправки почты
   mail.smtp_port = порт SMTP сервера для отправки почты
   mail.smtp_sender =  идентификатор аккаунта (почта/что-то иное) отправителя
   mail.auth_pass = пароль аккаунта
   telegram.bot_token = токен чат-бота
   whatsapp.token = токен Whatsapp аккаунта
   kafka.bootstrap_servers = список брокеров Kafka, разделенные запятыми
   database.url = адрес доступной бд
   database.username = логин пользователя бд
   database.password = пароль пользователя бд
   kafka.topic_messages = название топика Debezium
   log.path = куда выводить логи
   log.in_file = логировать только в файл или также в консоль
